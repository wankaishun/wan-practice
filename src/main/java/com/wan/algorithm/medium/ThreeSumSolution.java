package com.wan.algorithm.medium;import java.util.ArrayList;import java.util.Arrays;import java.util.Collections;import java.util.List;/** * @author wan * @Description: 15. 三数之和 * 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。 * * 注意：答案中不可以包含重复的三元组。 * *   * * 示例 1： * * 输入：nums = [-1,0,1,2,-1,-4] * 输出：[[-1,-1,2],[-1,0,1]] * 示例 2： * * 输入：nums = [] * 输出：[] * 示例 3： * * 输入：nums = [0] * 输出：[] * * 来源：力扣（LeetCode） * 链接：https://leetcode-cn.com/problems/3sum * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。 * @date 2022/1/10 11:11 */public class ThreeSumSolution {    public static  List<List<Integer>> threeSum(Integer[] nums) {        return null;    }    public static void main(String[] args) {        Integer[] nums = {-1,0,1,2,-1,-4};        // -4 -1 -1 0 1 2        for (List<Integer> integers : threeSum(nums)) {            System.out.println(integers);        }    }}